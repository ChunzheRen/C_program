
static const 和 extern彼此没啥大关系。。。。。。
extern：遇到这个声明就去别的地方找定义
static：改变作用域 存储空间 和 可见性 
const：取决于声明的位置 ，const成员函数 ，const常量 。
就类似于 getline get gets cin之流对于字符和字符串的不同的操作。
const一般的默认是修饰左边的参数。

const int*const Method3(const int*const&)const;
返回一个指向常参数的常指针对象，这个函数是一个常成员函数，函数或者叫做方法的参数是一个指向常整数的常指针，常指针保证了指向的地址是不会被改变的。

保护传递给函数的数据不在函数中被改变，就应使用常引用
常指针是指向的地址不发生改变。

・・・常量指针的使用要注意，指针指向的对象不能通过这个指针来修改，可是仍然可以通过原来的声明修改，也就是说常量指针可以被赋值为变量的地址，之所以叫做常量指针，是限制了通过这个指针修改变量的值。


int a = 5;

 const int b = 8;

  const int *c = &a; // 这是合法的，非法的是对c的使用

  *c = 6; // 非法，但可以这样修改c指向的对象的值：a = 6;

   const int *d = &b; // b是常量，d可以指向b，d被赋值为b的地址是合法的


因为函数的参数声明用了常量指针的形式，就保证了在函数内部，那 个常量不被更改。也就是说，对str1和str2的内容更改的操作在函数内部是不被允许的。

特点是，const的位置在指针声明运算符*的左侧。只要const位于*的左侧，无论它在类型名的左边或右边，都声明了一个指向常量的指针，叫做常量指针。*左侧是常量，指针指向的对象是常量