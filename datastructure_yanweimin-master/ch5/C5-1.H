 /* c5-1.h 数组的顺序存储表示 */
 #include<stdarg.h> /* 标准头文件，提供宏va_start，va_arg和va_end， */
                    /* 用于存取变长参数表 */
 #define MAX_ARRAY_DIM 8 /* 假设数组维数的最大值为8 */
 typedef struct
 {
   ElemType *base; /* 数组元素基址，由InitArray分配 */
   int dim; /* 数组维数 */
   int *bounds; /* 数组维界基址，由InitArray分配 */
   int *constants; /* 数组映象函数常量基址，由InitArray分配 */
 }Array;
 
//数组中的每一个元素都可以看做是dim-1维的数组。
//bounds指向一个存放每一个维度的数组长度的一个起始地址，数组中有一个存放数组维界的数组 ，里面存放着每一个维度的长度。
//bounds就是这个数组的基址。
//constants - 指向一个存放每一维起始地址的数组的起始地址. 为了更方便的计算每一维数据元素的地址, 数组中每一维前面都有一个固定值,(可以类似理解成10进制中十位进一位代表10, 百位进一位代表100. 十位和百位就代表不同的维度, 10和100就是存储在纬度前面的那个固定值.) 把这些固定值储存到一个映像函数数组中, constants 就是这个数组的基址.

